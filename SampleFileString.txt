artifactFiles:
  files:
    Artifacts/Scripts/cnDBTier_Alertrules.yaml: !!binary |-
      
    Artifacts/Scripts/mksecrets.sh: !!binary |-
      IyEvYmluL2Jhc2gKCnByaW50X2hlbHAoKSB7CiAgICBjYXQgPDxFT0YKTkFNRQogICAgbWtzZWNyZXRzLnNoIC0gaGVscGVyIGZ1bmN0aW9uIHRvIGNyZWF0ZSBrOHMgc2VjcmV0cyByZXF1aXJlZCBmb3IKICAgICAgICBteXNxbC1jbHVzdGVyIGluc3RhbGxhdGlvbiB3aXRob3V0IHByaW50aW5nIHRoZSBwYXNzd29yZHMgb24gdGhlCiAgICAgICAgY29tbWFuZCBsaW5lLiAgSXQgY3JlYXRlcyBrdWJlcm5ldGVzIHNlY3JldHMgZm9yIHJvb3QgdXNlciBhbmQKICAgICAgICBtb25pdG9yIGFuZC9vciBnZW8gcmVwbGljYXRpb24gc2VydmljZXMuCgpTWU5PUFNJUwogICAgIyBUaGlzIGJhc2ggZW52IHZhcmlhYmxlIGlzIHJlcXVpcmVkIGJlZm9yZSBydW5uaW5nICQwOgoKICAgIGV4cG9ydCBPQ0NORV9OQU1FU1BBQ0U9PG5hbWVzcGFjZT4KICAgICAgICAjIGt1YmVybmV0ZXMgbmFtZXNwYWNlCgogICAgbWtzZWNyZXRzLnNoIFstaCB8IC0taGVscCB8IC0tcmVwbG9ubHldCgpPUFRJT05TCiAgICAtaCB8IC0taGVscAogICAgICAgIFByaW50IHRoaXMgaGVscCBtZXNzYWdlIGFuZCBleGl0LgoKICAgIC0tcmVwbG9ubHkKICAgICAgICBFeGVjdXRlIG9ubHkgdGhlIGdlbyByZXBsaWNhdGlvbiBrOHMgc2VjcmV0LiBUbyBiZSB1c2VkIG9uIGEKICAgICAgICBzeXN0ZW0gcHJldmlvdXNseSBpbnN0YWxsZWQgd2l0aG91dCBnZW8gcmVwbGljYXRpb24uCgpFWEFNUExFCiAgICBDcmVhdGUgbXlzcWwgcm9vdCB1c2VyIGFuZCBkYiBtb25pdG9yIHNlcnZpY2UuIEl0IHdpbGwgbGV0IHVzZXIgY2hvc2UgaWYKICAgIGdlbyByZXBsaWNhdGlvbiBrOHMgc2VjcmV0IGlzIGFsc28gY3JlYXRlZDoKCiAgICAgICAgZXhwb3J0IE9DQ05FX05BTUVTUEFDRT1kZWZhdWx0CgogICAgICAgIC4uL21rc2VjcmV0cy5zaAoKICAgIGNyZWF0ZSBvbmx5IGdlbyByZXBsaWNhdGlvbiBzZXJ2aWNlIGs4cyBzZWNyZXQ6CgogICAgICAgIGV4cG9ydCBPQ0NORV9OQU1FU1BBQ0U9ZGVmYXVsdAoKICAgICAgICAuLi9ta3NlY3JldHMuc2ggLS1yZXBsb25seQoKRU9GCn0KCmdldF9wYXNzd29yZCgpIHsKICAgIGxvY2FsIG1zZz0kMQoKICAgIHN0dHkgLWVjaG8KICAgIGVjaG8gLW4gIiRtc2c6ICIKICAgIHJlYWQgcGFzc3dvcmQxCiAgICBlY2hvICIiCiAgICBlY2hvIC1uICIkbXNnIGFnYWluOiAiCiAgICByZWFkIHBhc3N3b3JkMgogICAgZWNobyAiIgogICAgc3R0eSBlY2hvCgogICAgaWYgW1sgLXogIiRwYXNzd29yZDEiIF1dOyB0aGVuCiAgICAgICAgZWNobyAiRXJyb3I6IGEgcGFzc3dvcmQgbXVzdCBiZSBlbnRlcmVkOyBleGl0aW5nLi4uIgogICAgICAgIGV4aXQgMQogICAgZWxpZiBbWyAiJHBhc3N3b3JkMSIgPT0gIiRwYXNzd29yZDIiIF1dOyB0aGVuCiAgICAgICAgcmVzdWx0PSRwYXNzd29yZDEKICAgIGVsc2UKICAgICAgICBlY2hvICJQYXNzd29yZHMgZG9uJ3QgbWF0Y2g7IGV4aXRpbmcuLi4iCiAgICAgICAgZXhpdCAyCiAgICBmaQoKICAgIHVuc2V0IHBhc3N3b3JkMQogICAgdW5zZXQgcGFzc3dvcmQyCn0KCnByaW50X2Vudl92YXJzKCkgewogICAgZWNobyAiICAgIE9DQ05FX05BTUVTUEFDRT0kT0NDTkVfTkFNRVNQQUNFIgp9Cgpkb25vbnJlcGw9InllcyIKCmlmIFtbICIkMSIgPT0gIi1oIiB8fCAiJDEiID09ICItLWhlbHAiIF1dOyB0aGVuCiAgICBwcmludF9oZWxwCiAgICBleGl0IDAKZmkKCmlmIFtbICIkIyIgPiAiMSIgXV07IHRoZW4KICAgIGVjaG8gIkVycm9yOiBpbnZhbGlkIHBhcmFtZXRlcihzKS4iCiAgICBlY2hvICJGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcnVuOiAkMCAtLWhlbHAiCiAgICBleGl0IDEKZmkKCmlmIFtbICIkIyIgPT0gIjEiIF1dOyB0aGVuCiAgICBpZiBbWyAiJDEiID09ICItLXJlcGxvbmx5IiBdXTsgdGhlbgogICAgICAgIGRvbm9ucmVwbD0ibm8iCiAgICAgICAgZG9yZXBsaWNhdGlvbj0ieWVzIgogICAgICAgIHNoaWZ0CiAgICBlbHNlCiAgICAgICAgZWNobyAiRXJyb3I6IGludmFsaWQgcGFyYW1ldGVyKHMpLiIKICAgICAgICBlY2hvICJGb3IgbW9yZSBpbmZvcm1hdGlvbiwgcnVuOiAkMCAtLWhlbHAiCiAgICAgICAgZXhpdCAxCiAgICBmaQpmaQoKaWYgW1sgLXogIiRPQ0NORV9OQU1FU1BBQ0UiIF1dOyB0aGVuCiAgICBlY2hvICJFcnJvcjogYWxsIGVudmlyb25tZW50IHZhcmlhYmxlcyBiZWxvdyBtdXN0IGJlIHNldCB1cCB3aXRoIGFwcHJvcHJpYXRlIHZhbHVlczoiCiAgICBlY2hvICIiCiAgICBwcmludF9lbnZfdmFycwogICAgZWNobyAiIgogICAgZWNobyAiRm9yIG1vcmUgaW5mb3JtYXRpb24sIHJ1bjogJDAgLS1oZWxwIgogICAgZXhpdCAzCmZpCgplY2hvICJVc2luZyB0aGUgZm9sbG93aW5nIHZhbHVlczoiCnByaW50X2Vudl92YXJzCmVjaG8gIiIKCmlmIFtbICIkZG9ub25yZXBsIiA9PSAieWVzIiBdXTsgdGhlbgogICAgZ2V0X3Bhc3N3b3JkICJFbnRlciBuZXcgbXlzcWwgcm9vdCBwYXNzd29yZCIKICAgIHJvb3RwYXNzd29yZD0kcmVzdWx0CmZpCgppZiBbWyAiJGRvbm9ucmVwbCIgPT0gInllcyIgXV07IHRoZW4KICAgIGVjaG8gLW4gIkVudGVyIG15c3FsIHVzZXIgZm9yIG1vbml0b3Igc2VydmljZSAoZGVmYXVsdDogb2NjbmV1c2VyKTogIgogICAgcmVhZCBtb25pdG9yVXNlcgogICAgaWYgW1sgLXogIiRtb25pdG9yVXNlciIgXV07IHRoZW4KICAgICAgICBtb25pdG9yVXNlcj0ib2NjbmV1c2VyIgogICAgZmkKCiAgICBnZXRfcGFzc3dvcmQgIkVudGVyICRtb25pdG9yVXNlciBwYXNzd29yZCIKICAgIG1vbml0b3JwYXNzd29yZD0kcmVzdWx0CgpmaQoKCiAgICBlY2hvIC1uICJFbnRlciBteXNxbCB1c2VyIGZvciBnZW8gcmVwbGljYXRpb24gc2VydmljZSAoZGVmYXVsdDogb2NjbmVyZXBsdXNlcik6ICIKICAgIHJlYWQgcmVwbGljYXRpb25Vc2VyCiAgICBpZiBbWyAteiAiJHJlcGxpY2F0aW9uVXNlciIgXV07IHRoZW4KICAgICAgICByZXBsaWNhdGlvblVzZXI9Im9jY25lcmVwbHVzZXIiCiAgICBmaQoKICAgIGdldF9wYXNzd29yZCAiRW50ZXIgJHJlcGxpY2F0aW9uVXNlciBwYXNzd29yZCIKICAgIHJlcGxpY2F0aW9ucGFzc3dvcmQ9JHJlc3VsdAoKaWYgW1sgIiRkb25vbnJlcGwiID09ICJ5ZXMiIF1dOyB0aGVuCiAgICBlY2hvICJjcmVhdGluZyBzZWNyZXQgZm9yIG15c3FsIHJvb3QgdXNlci4uLiIKICAgIGt1YmVjdGwgLW4gJHtPQ0NORV9OQU1FU1BBQ0V9IGNyZWF0ZSBzZWNyZXQgZ2VuZXJpYyBvY2NuZS1teXNxbG5kYi1yb290LXNlY3JldCBcCiAgICAgICAgLS1mcm9tLWxpdGVyYWw9Im15c3FsX3Jvb3RfcGFzc3dvcmQ9JHtyb290cGFzc3dvcmR9IgoKICAgIGVjaG8gImNyZWF0aW5nIHNlY3JldCBmb3IgbXlzcWwgZGIgbW9uaXRvciBzZXJ2aWNlIHVzZXIuLi4iCiAgICBrdWJlY3RsIC1uICR7T0NDTkVfTkFNRVNQQUNFfSBjcmVhdGUgc2VjcmV0IGdlbmVyaWMgb2NjbmUtc2VjcmV0LWRiLW1vbml0b3Itc2VjcmV0IFwKICAgICAgICAtLWZyb20tbGl0ZXJhbD0ibXlzcWxfdXNlcm5hbWVfZm9yX21ldHJpY3M9JHttb25pdG9yVXNlcn0iIFwKICAgICAgICAtLWZyb20tbGl0ZXJhbD0ibXlzcWxfcGFzc3dvcmRfZm9yX21ldHJpY3M9JHttb25pdG9ycGFzc3dvcmR9IgpmaQoKICAgIGVjaG8gImNyZWF0aW5nIHNlY3JldCBmb3IgbXlzcWwgZGIgcmVwbGljYXRpb24gc2VydmljZSB1c2VyLi4uIgogICAga3ViZWN0bCAtbiAke09DQ05FX05BTUVTUEFDRX0gY3JlYXRlIHNlY3JldCBnZW5lcmljIG9jY25lLXJlcGxpY2F0aW9uLXNlY3JldC1kYi1yZXBsaWNhdGlvbi1zZWNyZXQgXAogICAgICAgIC0tZnJvbS1saXRlcmFsPSJteXNxbF91c2VybmFtZV9mb3JfcmVwbGljYXRpb249JHtyZXBsaWNhdGlvblVzZXJ9IiBcCiAgICAgICAgLS1mcm9tLWxpdGVyYWw9Im15c3FsX3Bhc3N3b3JkX2Zvcl9yZXBsaWNhdGlvbj0ke3JlcGxpY2F0aW9ucGFzc3dvcmR9IgoKZWNobyAiZG9uZSIKZXhpdCAwCg==
    Artifacts/Scripts/snmp_mibs/tklc_toplevel.mib.txt: !!binary |-
      
    Artifacts/Images/occne-db-backup-executor-svc-1.8.9.tar: !!binary |-
      b2NjbmUtZGItYmFja3VwLWV4ZWN1dG9yLXN2Yy0xLjguOS50YXI=
    Artifacts/Images/occne-db-replication-svc-1.8.9.tar: !!binary |-
      b2NjbmUtZGItcmVwbGljYXRpb24tc3ZjLTEuOC45LnRhcg==
    Artifacts/Scripts/cnDBTier_Grafana_Dashboard.json: !!binary |-
      
    Artifacts/Scripts/namespace/cndbtier_namespace.yaml: !!binary |-
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjCiMgQ29weXJpZ2h0IChjKSAyMDIwIE9yYWNsZSBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuICAgICAgICAgICMKIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIwojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCgojIGRlZmF1bHQgbmFtZXNwYWNlIGZvciBPQ0NORSBjbmRidGllcgphcGlWZXJzaW9uOiB2MQpraW5kOiBOYW1lc3BhY2UKbWV0YWRhdGE6CiAgIG5hbWU6IG9jY25lLWNuZGJ0aWVyCi0tLQphcGlWZXJzaW9uOiB2MQpraW5kOiBTZXJ2aWNlQWNjb3VudAptZXRhZGF0YTogCiAgbmFtZTogb2NjbmUtY25kYnRpZXItc2VydmljZWFjY291bnQKICBuYW1lc3BhY2U6IG9jY25lLWNuZGJ0aWVyCi0tLQphcGlWZXJzaW9uOiBwb2xpY3kvdjFiZXRhMQpraW5kOiBQb2RTZWN1cml0eVBvbGljeQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6ICJjcy1yZXN0cmljdGVkIgpzcGVjOgogIGFsbG93ZWRIb3N0UGF0aHM6CiAgLSBwYXRoUHJlZml4OiAvdmFyL2xvZwogICAgcmVhZE9ubHk6IGZhbHNlCiAgLSBwYXRoUHJlZml4OiAvdmFyL2xpYi9kb2NrZXIvY29udGFpbmVycwogICAgcmVhZE9ubHk6IHRydWUKICAtIHBhdGhQcmVmaXg6IC91c3IvbGliNjQKICAgIHJlYWRPbmx5OiB0cnVlCiAgLSBwYXRoUHJlZml4OiAvcHJvYwogICAgcmVhZE9ubHk6IHRydWUKICAtIHBhdGhQcmVmaXg6IC9zeXMKICAgIHJlYWRPbmx5OiB0cnVlCiAgZnNHcm91cDoKICAgIHJ1bGU6IFJ1bkFzQW55CiAgaG9zdE5ldHdvcms6IHRydWUKICBob3N0UElEOiB0cnVlCiAgcmVhZE9ubHlSb290RmlsZXN5c3RlbTogZmFsc2UKICBydW5Bc1VzZXI6CiAgICBydWxlOiBSdW5Bc0FueQogIHNlTGludXg6CiAgICBydWxlOiBSdW5Bc0FueQogIHN1cHBsZW1lbnRhbEdyb3VwczoKICAgIHJ1bGU6IFJ1bkFzQW55CiAgdm9sdW1lczoKICAtIGhvc3RQYXRoCiAgLSBjb25maWdNYXAKICAtIHNlY3JldAogIC0gZW1wdHlEaXIKICAtIHBlcnNpc3RlbnRWb2x1bWVDbGFpbQotLS0KIyBoYXZlIGFkbWlzc2lvbiBjb250cm9sbGVyIHVzZSB0aGUgY3MtcmVzdHJpY3RlZCBwc3AgKGZvciBhbGwgYm91bmQgc3ViamVjdHMpCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogQ2x1c3RlclJvbGUKbWV0YWRhdGE6CiAgbmFtZTogInBzcDpjcy1yZXN0cmljdGVkIgpydWxlczoKLSBhcGlHcm91cHM6IFsgInBvbGljeSIgXQogIHJlc291cmNlczogWyAicG9kc2VjdXJpdHlwb2xpY2llcyIgXQogIHZlcmJzOiAgICAgWyAidXNlIiBdCiAgcmVzb3VyY2VOYW1lczoKICAtICJjcy1yZXN0cmljdGVkIgotLS0KIyBwZXJtaXQgYWNjZXNzIHRvIGFsbCBzZXJ2aWNlIGFjY291bnRzIGluIHRoZSBuYW1lc3BhY2UKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBSb2xlQmluZGluZwptZXRhZGF0YToKICBuYW1lOiAicHNwOm9jY25lLWNuZGJ0aWVyOmNzLXJlc3RyaWN0ZWQiCiAgbmFtZXNwYWNlOiAib2NjbmUtY25kYnRpZXIiCnJvbGVSZWY6CiAga2luZDogQ2x1c3RlclJvbGUKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIG5hbWU6ICJwc3A6cHJpdmlsZWdlZCIKc3ViamVjdHM6Ci0ga2luZDogR3JvdXAKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIG5hbWU6ICJzeXN0ZW06c2VydmljZWFjY291bnRzIg==
    occndbtier_mysqlndb_vnfd.mf: !!binary |-
      bWV0YWRhdGE6CiAgdm5mX3Byb2R1Y3RfbmFtZTogT3JhY2xlIENOQyBDTkRhdGEgVGllcgogIHZuZl9wYWNrYWdlX3ZlcnNpb246IDEuOC45IAogIHZuZl9wcm92aWRlcl9pZDogT3JhY2xlIENvbW11bmljYXRpb25zCiAgdm5mX3JlbGVhc2VfZGF0YV90aW1lOiBUaHUgQXVnIDEyIDA5OjU1OjEzIEdNVCAyMDIxIAoKU291cmNlOiAuL0FydGlmYWN0cy9DaGFuZ2VMb2cudHh0CkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiBjNmRlNWJhNzNmZGM1OWZkZTczMTJjZDZjMTcxMDBkYmQzYTU2NmUyYWY0MDBkOWRlYjUwMTVlNDZkZDA2ZDVhCgpTb3VyY2U6IC4vQXJ0aWZhY3RzL0ltYWdlcy9vY2NuZS1teXNxbC1jbHVzdGVyLTEuOC45LnRhcgpBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogZWYxZGM3ZDljYjU5NjE3OTJhODAzNDAxYjU5NjJjOWVkMGQwNzM5YTgxZWI1Mjc3Njg5ZDhiYTgwNzRkNDJhZQoKU291cmNlOiAuL0FydGlmYWN0cy9JbWFnZXMvb2NjbmUtY25kYnRpZXItbXlzcWxuZGItY2xpZW50LTEuOC45LnRhcgpBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogZDU5ZGViMTNhZWYyNGE5NGFjNGQ4NGQ4Mzg0NDc2MDBhNDQwYzJhYmZiMDNlNmY2MDk5Y2UzNzRlMjk3MjgwZQoKU291cmNlOiAuL0FydGlmYWN0cy9JbWFnZXMvb2NjbmUtZGItbW9uaXRvci1zdmMtMS44LjkudGFyCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiAzOWQyMjYzNGRkZTlkYWQxNWNkZDFhNjdmMGEyYzVlMzlkNTlkMWNlNjc4Yzc3NDI4N2M0MzM4OTVlMGQyZWFkCgpTb3VyY2U6IC4vQXJ0aWZhY3RzL0ltYWdlcy9vY2NuZS1kYi1yZXBsaWNhdGlvbi1zdmMtMS44LjkudGFyCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiA1YTVmMzU0OTI1MzFlZWViMjE1OTM0YTU4MjJlYTJjNTUxNmIxOGMzNDQ3NDY0MWEwZWI0MjkwZjQwY2ZkN2ZlCgpTb3VyY2U6IC4vQXJ0aWZhY3RzL0ltYWdlcy9vY2NuZS1kYi1iYWNrdXAtbWFuYWdlci1zdmMtMS44LjkudGFyCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiA0MGIwYmJkMGQwNjA2NGRmZGU2OGZkZWM2N2Q3MmZiNGViNmViODM3Mjk1NTFjZTgwMmNmYjhjOGM3OTA1ZTQ0CgpTb3VyY2U6IC4vQXJ0aWZhY3RzL0ltYWdlcy9vY2NuZS1kYi1iYWNrdXAtZXhlY3V0b3Itc3ZjLTEuOC45LnRhcgpBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogNGQ2YzA5MDk2ZTI0NDRlMGVlZWNlOWM5Y2EzNmRhMzhjMDA4ZGI3OWY5YjllNjE1ZjVlOGNlMDAzZjc1ODBkNQoKU291cmNlOiAuL0FydGlmYWN0cy9TY3JpcHRzL3NhbXBsZS1jbmRidGllci12YWx1ZXMueWFtbApBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogNWRlNjZiYzk5ZWNhY2VmNDk5MzBkN2FlOWFmNzY3YTM2OWU4ZDM3MjZlYTc3NjUwNjUxZTg5NTAyNGQzNDZjMgoKU291cmNlOiAuL0FydGlmYWN0cy9TY3JpcHRzL29jY25kYnRpZXItMS44LjktY3VzdG9tLXZhbHVlcy55YW1sCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiBhOTU2ZDFkNGYzMzc5Nzk2ZTlmN2I5ZDg2MzM1ZTcwNWRjYWIwMmM1OGZlM2QxNDZmYmU3MTBkOTA5ZDM3ZTViCgpTb3VyY2U6IC4vQXJ0aWZhY3RzL1NjcmlwdHMvY25EQlRpZXJfQWxlcnRydWxlcy55YW1sCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiBmNDlmZmExODk4MjQ4Y2RlYmFmNWQ0N2UwYzZlM2ZjNjZmYmEzM2U3YzUzZTMwNmNhNjA0MDgwNzkxMDEyYzNhCgpTb3VyY2U6IC4vQXJ0aWZhY3RzL1NjcmlwdHMvc25tcF9taWJzL09DREJUSUVSLU1JQi5NSUIudHh0CkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiBmMDlmNGFmN2Y1NDU4NzY3ZGRiNGIyNmVlMzQ0ZTFiZWEwNjNhZGQ3NDc5MTMxZjkxMDc1ZGExMWZiMGY4YWEyCgpTb3VyY2U6IC4vQXJ0aWZhY3RzL1NjcmlwdHMvc25tcF9taWJzL09DREJUSUVSLU1JQi1UQy5NSUIudHh0CkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiBlZjA2OGJmMWNlZmZlZWVjYzFlMDJjNjE4YzNlMDFiNmFhOWYyZGY4ODQzMzcwNjIxMzM5ODMyYmE2MDY5YTk3CgpTb3VyY2U6IC4vQXJ0aWZhY3RzL1NjcmlwdHMvc25tcF9taWJzL3RrbGNfdG9wbGV2ZWwubWliLnR4dApBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogMzFhYjMyM2Q3ZDI2ZDQ0NGU2ODAwYzRmMDM5ZDI3Y2U0MTg0MjU1MzNjMjlkMGE4YjI2MzkyMzQyZGZmNjE4NwoKU291cmNlOiAuL0FydGlmYWN0cy9TY3JpcHRzL2NvbmZpZ215c3FsLnNoCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiAxYzlhNTlhZDNhZTI1ZmYwNzlhZmIwMzQ1NGEzZDlmZDY1M2RiNmYxZmM5MDk2ZGMzNmMyOGU1ZDlhNTkyNjc1CgpTb3VyY2U6IC4vQXJ0aWZhY3RzL1NjcmlwdHMvbWtzZWNyZXRzLnNoCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiBhYjcxZjg3ZGIxYjg1NjM0ODY5ZGE0OWE0NmJiNGZmOTRjNTE0NTk0MGI2OWI2MTNkMjZhODU5YTQyNTdmOTI0CgpTb3VyY2U6IC4vQXJ0aWZhY3RzL1NjcmlwdHMvbmFtZXNwYWNlL2NuZGJ0aWVyX25hbWVzcGFjZS55YW1sCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiA2MzMxNWQzYzY1NTExMjgzNWFmMDcwZDIyNTcwYzg0ZTUyODBjYzgyNmRiYWIxMmYwZjllMjA1NDExMTdhZTVjCgpTb3VyY2U6IC4vQXJ0aWZhY3RzL1NjcmlwdHMvY25EQlRpZXJfR3JhZmFuYV9EYXNoYm9hcmQuanNvbgpBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogMWU2Y2UxM2IwYTk0ZTVmNGNmZDc0YzBjNTU3ZjEyOTY0Y2UxNzAwMDA1ZmFlODAyNTQ4ZTkyMjg4MzViYTlmOQoKU291cmNlOiAuL0FydGlmYWN0cy9TY3JpcHRzL29jY25kYnRpZXItMS44LjkudGd6CkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiA3MmNjOWEyNTI3NWM3ZDQ4ZThmZDVjYTcxMDI3NzUxYmYzY2U4ZDg5NWU0YzcwYmRjYmUxM2MzZDIzNDVlYTk5CgpTb3VyY2U6IC4vRGVmaW5pdGlvbnMvZXRzaV9uZnZfc29sMDAxX3ZuZmRfMl81XzFfdHlwZXMueWFtbApBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogYWY0ZDBiNjExNzZjY2E5OTMzZjJmYWNjNTg5NDU4NDIyYTM1NDFjYWJkNTFlMTJkZjc4MWM2MDRiNjdhMmQ0NQoKU291cmNlOiAuL0RlZmluaXRpb25zL3Z6X2hlbG1fZXh0ZW5zaW9uc18xXzAueWFtbApBbGdvcml0aG06IFNIQS0yNTYKSGFzaDogYjcxNzQzZmY0YzA1MWI2ZThjN2Y0Zjc0ZWM2ZGQ1YzU4ZDU2MWE5NjU5NmYzMGE4ZTNmYzMxMWExYmExMzE3NQoKU291cmNlOiAuL0RlZmluaXRpb25zL29jY25kYnRpZXJfbXlzcWxuZGJfdm5mZC55bWwKQWxnb3JpdGhtOiBTSEEtMjU2Ckhhc2g6IDdkZGJmYTMyOGM1OTUyZDgzNTQ5YzczYzk5ZmExZDcxNmIwZjEyMzQ5YmY3MWZjNzIxODE1YjlkMDc2MzBhNDEKClNvdXJjZTogLi9UT1NDQS1NZXRhZGF0YS9UT1NDQS5tZXRhCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiA2M2NhYjVhNDEzY2Y2NzAzZTViNmM4MzQ0YzJlYTI4Yzk4OTBiOWI3NGNkN2JhZmJkYjljOTdjZWJmNTA3NmE1CgpTb3VyY2U6IC4vb2NjbmRidGllcl9teXNxbG5kYl92bmZkLm1mCkFsZ29yaXRobTogU0hBLTI1NgpIYXNoOiBlNWYyNmEwZDg5NTlhMDQ2NDRlZDFkZjc5YTVmNThkZjNkOTM4NTU4MzQwMzBkNzgyYzQ4ZTMxZDJhMWU4YWYzCgo=
    Artifacts/ChangeLog.txt: !!binary |-
      VGh1IEF1ZyAxMiAwOTo1NToxMyBHTVQgMjAyMTogQ3JlYXRlZCBDU0FSIHBhY2thZ2UgZm9yIE9DQ05EQlRpZXIgMS44LjkK
    Artifacts/Images/imageConfigRef: !!binary |-
      W3siY2hlY2tzdW0iOiAiZjhlMzIxZjdiOGU0YTYyNTk0OTA1MDlkYmU0YTFjNGQiLCAidmNwQ29yZURlZmF1bHRVcmwiOiAidm5mLnZ6d25ldC5jb20vd3NfY29yZS81ZWUyMmFmMzM4NTgwMTAwMDFhYzQwZTUvb2NjbmUvY25kYnRpZXItbXlzcWxuZGItY2xpZW50OjEuOC45IiwgIm5hbWUiOiAiY25kYnRpZXItbXlzcWxuZGItY2xpZW50XzEuOC45LnRhciIsICJzaXplIjogIjQzNy4yTUIifSwgeyJjaGVja3N1bSI6ICIxZmRiNDM2YjE2ZTMxY2I3Y2RlNDM3ODQyNDY5NTY2OSIsICJ2Y3BDb3JlRGVmYXVsdFVybCI6ICJ2bmYudnp3bmV0LmNvbS93c19jb3JlLzVlZTIyYWYzMzg1ODAxMDAwMWFjNDBlNS9vY2NuZS9kYl9iYWNrdXBfZXhlY3V0b3Jfc3ZjOjEuOC45IiwgIm5hbWUiOiAiZGJfYmFja3VwX2V4ZWN1dG9yX3N2Y18xLjguOS50YXIiLCAic2l6ZSI6ICI0MjQuNU1CIn0sIHsiY2hlY2tzdW0iOiAiMDQ0ZDc2ZGNiM2NkZWNjZmMzYTk2MmQ1ZDZhYjI5Y2IiLCAidmNwQ29yZURlZmF1bHRVcmwiOiAidm5mLnZ6d25ldC5jb20vd3NfY29yZS81ZWUyMmFmMzM4NTgwMTAwMDFhYzQwZTUvb2NjbmUvZGJfbW9uaXRvcl9zdmM6MS44LjkiLCAibmFtZSI6ICJkYl9tb25pdG9yX3N2Y18xLjguOS50YXIiLCAic2l6ZSI6ICI0NzIuMk1CIn0sIHsiY2hlY2tzdW0iOiAiNmIyNWEzNDM4NzU1MTdiM2U4NTcxYjNjMjYwMGQ4ODciLCAidmNwQ29yZURlZmF1bHRVcmwiOiAidm5mLnZ6d25ldC5jb20vd3NfY29yZS81ZWUyMmFmMzM4NTgwMTAwMDFhYzQwZTUvb2NjbmUvbXlzcWwtY2x1c3RlcjoxLjguOSIsICJuYW1lIjogIm15c3FsLWNsdXN0ZXJfMS44LjkudGFyIiwgInNpemUiOiAiNDczLjhNQiJ9LCB7ImNoZWNrc3VtIjogIjIwYWY3NTgyYmI0NmFjYjc5NmU3MTljYTUyNDhiNmQ5IiwgInZjcENvcmVEZWZhdWx0VXJsIjogInZuZi52enduZXQuY29tL3dzX2NvcmUvNWVlMjJhZjMzODU4MDEwMDAxYWM0MGU1L29jY25lL2RiX3JlcGxpY2F0aW9uX3N2YzoxLjguOSIsICJuYW1lIjogImRiX3JlcGxpY2F0aW9uX3N2Y18xLjguOS50YXIiLCAic2l6ZSI6ICI0NzIuMk1CIn0sIHsiY2hlY2tzdW0iOiAiZmZhOTEyMGU3OTIzMmJiNDQzNjZjYWM5ODQ2ZGJmZTgiLCAidmNwQ29yZURlZmF1bHRVcmwiOiAidm5mLnZ6d25ldC5jb20vd3NfY29yZS81ZWUyMmFmMzM4NTgwMTAwMDFhYzQwZTUvb2NjbmUvZGJfYmFja3VwX21hbmFnZXJfc3ZjOjEuOC45IiwgIm5hbWUiOiAiZGJfYmFja3VwX21hbmFnZXJfc3ZjXzEuOC45LnRhciIsICJzaXplIjogIjUwNi45TUIifV0=
    Artifacts/Images/occne-cndbtier-mysqlndb-client-1.8.9.tar: !!binary |-
      b2NjbmUtY25kYnRpZXItbXlzcWxuZGItY2xpZW50LTEuOC45LnRhcg==
    Artifacts/Scripts/snmp_mibs/OCDBTIER-MIB-TC.MIB.txt: !!binary |-
      LS0gREIgVGllciAxLjUKLS0KLS0gQ29weXJpZ2h0IChDKSAyMDIwLCBPcmFjbGUgYW5kL29yIGl0cyBhZmZpbGlhdGVzLiBBbGwgcmlnaHRzIHJlc2VydmVkLgotLQpEQi1USUVSLVRDIERFRklOSVRJT05TIDo6PSBCRUdJTgoKSU1QT1JUUwogICAgVEVYVFVBTC1DT05WRU5USU9OIEZST00gU05NUHYyLVRDOwoKLS0KLS0gVGV4dHVhbCBDb252ZW50aW9ucwotLQoKCkRiVGllckFsYXJtU2V2ZXJpdHkgOjo9IFRFWFRVQUwtQ09OVkVOVElPTgogICAgU1RBVFVTICAgICAgY3VycmVudAogICAgREVTQ1JJUFRJT04KICAgICAgICAgICAgIkFsYXJtIHNldmVyaXR5IHZhbHVlcyIKICAgIFNZTlRBWCAgSU5URUdFUiB7CiAgICAgICAgICAgICAgICBjcml0aWNhbCgxKSwKICAgICAgICAgICAgICAgIHdhcm5pbmcoMiksCiAgICAgICAgICAgICAgICBpbmZvKDMpLAogICAgICAgICAgICB9CgpEYlRpZXJBbGFybU51bWJlciA6Oj0gVEVYVFVBTC1DT05WRU5USU9OCiAgICBTVEFUVVMgICAgICBjdXJyZW50CiAgICBERVNDUklQVElPTgogICAgICAgICAgICAiQWxhcm0gbnVtYmVyIHZhbHVlcyIKICAgIFNZTlRBWCAgSU5URUdFUiAoMC4uMjE0NzQ4MzY0NykKCkRiVGllckRhdGVBbmRUaW1lIDo6PSBURVhUVUFMLUNPTlZFTlRJT04KICAgIERJU1BMQVktSElOVCAgICAiMmQtMWQtMWQsMWQ6MWQ6MWQuMmQiCiAgICBTVEFUVVMgICAgICAgICAgY3VycmVudAogICAgREVTQ1JJUFRJT04KICAgICAgICAgICAgIk1pbGxpc2Vjb25kIHJlc29sdXRpb24gZGF0ZSBhbmQgdGltZSB0eXBlIgogICAgU1lOVEFYICAgICAgT0NURVQgU1RSSU5HIChTSVpFICg3IHwgOSkpCgpEYlRpZXJBbGVydE5hbWUgOjo9IFRFWFRVQUwtQ09OVkVOVElPTgogICAgRElTUExBWS1ISU5UICAgICIyNTVhIgogICAgU1RBVFVTICAgICAgICAgIGN1cnJlbnQKICAgIERFU0NSSVBUSU9OCiAgICAgICAgICAgICJBbGVydCBuYW1lIgogICAgU1lOVEFYICAgICAgT0NURVQgU1RSSU5HIChTSVpFICgwLi4yNTUpKQoKRGJUaWVyUmVsZWFzZSA6Oj0gVEVYVFVBTC1DT05WRU5USU9OCiAgICBESVNQTEFZLUhJTlQgICAgIjI1NWEiCiAgICBTVEFUVVMgICAgICAgICAgY3VycmVudAogICAgREVTQ1JJUFRJT04KICAgICAgICAgICAgIlJlbGVhc2UgIgogICAgU1lOVEFYICAgICAgT0NURVQgU1RSSU5HIChTSVpFICgwLi4yNTUpKQoKRGJUaWVyQWxlcnRTZXZlcml0eSA6Oj0gVEVYVFVBTC1DT05WRU5USU9OCiAgICBESVNQTEFZLUhJTlQgICAgIjI1NWEiCiAgICBTVEFUVVMgICAgICAgICAgY3VycmVudAogICAgREVTQ1JJUFRJT04KICAgICAgICAgICAgIlJlbGVhc2UgIgogICAgU1lOVEFYICAgICAgT0NURVQgU1RSSU5HIChTSVpFICgwLi4yNTUpKQo=
    Artifacts/Scripts/snmp_mibs/OCDBTIER-MIB.MIB.txt: !!binary |-
      
    Artifacts/Images/occne-db-monitor-svc-1.8.9.tar: !!binary |-
      b2NjbmUtZGItbW9uaXRvci1zdmMtMS44LjkudGFy
    Artifacts/Scripts/occndbtier-1.8.9.tgz: !!binary |-
      
    Artifacts/Images/occne-mysql-cluster-1.8.9.tar: !!binary |-
      b2NjbmUtbXlzcWwtY2x1c3Rlci0xLjguOS50YXI=
    Artifacts/Scripts/sample-cndbtier-values.yaml: !!binary |-
      
    Artifacts/Scripts/configmysql.sh: !!binary |-
      
    Artifacts/Images/occne-db-backup-manager-svc-1.8.9.tar: !!binary |-
      b2NjbmUtZGItYmFja3VwLW1hbmFnZXItc3ZjLTEuOC45LnRhcg==
    Artifacts/Scripts/occndbtier-1.8.9-custom-values.yaml: !!binary |-
      
serviceTemplates:
  Definitions/occndbtier_mysqlndb_vnfd.yml:
    tosca_definitions_version: tosca_simple_yaml_1_2
    dsl_definitions:
      descriptor_id: 7f115ff1-354d-4a6c-838b-954e95c7584a
      provider: Oracle Communications
      product_name: OCCNDBTier MySQL NDB Cluster
      software_version: 1.8.9
      descriptor_version: 1.8.9
      flavour_id: simple
      flavour_description: simple deployment
      vnfm: HPE
    description: OCDBTier 1.8.9 descriptor
    imports:
    - etsi_nfv_sol001_vnfd_2_5_1_types:
        file: etsi_nfv_sol001_vnfd_2_5_1_types.yaml
    - vz_helm_extensions_1_0:
        file: vz_helm_extensions_1_0.yaml
    node_types:
      mycompany.nodes.nfv.test:
        properties:
          descriptor_id:
            type: string
            required: true
            default: 7f115ff1-354d-4a6c-838b-954e95c7584a
            status: SUPPORTED
            constraints:
            - valid_values:
              - 7f115ff1-354d-4a6c-838b-954e95c7584a
          provider:
            type: string
            required: true
            default: Oracle Communications
            status: SUPPORTED
            constraints:
            - valid_values:
              - Oracle Communications
          product_name:
            type: string
            required: true
            default: OCCNDBTier MySQL NDB Cluster
            status: SUPPORTED
            constraints:
            - valid_values:
              - OCCNDBTier MySQL NDB Cluster
          product_info_description:
            type: string
            required: true
            default: product_info_description
            status: SUPPORTED
            constraints:
            - valid_values:
              - product_info_description
          software_version:
            type: string
            required: true
            default: 1.8.9
            status: SUPPORTED
            constraints:
            - valid_values:
              - 1.8.9
          descriptor_version:
            type: string
            required: true
            default: 1.8.9
            status: SUPPORTED
            constraints:
            - valid_values:
              - 1.8.9
          flavour_id:
            type: string
            required: true
            default: simple
            status: SUPPORTED
            constraints:
            - valid_values:
              - simple
          flavour_description:
            type: string
            required: true
            default: simple deployment
            status: SUPPORTED
            constraints:
            - valid_values:
              - simple deployment
          vnfm_info:
            type: list
            required: true
            default:
            - HPE
            status: SUPPORTED
            constraints:
            - valid_values:
              - HPE
            entry_schema:
              type: string
        derived_from: tosca.nodes.nfv.VNF
    topology_template:
      node_templates:
        VNF:
          type: mycompany.nodes.nfv.test
          metadata:
            onboardingEntityTypeOnboarding: VNF
            type: VFC
            classification: LocalVFC
        occndbtier_helm:
          type: tosca.nodes.verizon.Helm
          properties:
            name: occndbtier-chart-deployment
            description: Helm chart for OCCNDBTier
            helm_version: v3
            cpuResourceMinRequest: 80.0
            cpuResourceMaxRequest: 150.0
            memoryResourceMinRequest: 120 GiB
            memoryResourceMaxRequest: 160 GiB
            localStorageResourceMinRequest: 0 GiB
            localStorageResourceMaxRequest: 0 GiB
            persistentStorageResourceMinRequest: 800 GiB
            persistentStorageResourceMaxRequest: 1200 GiB
            vdu_profile:
              min_number_of_instances: 1
              max_number_of_instances: 1
          artifacts:
            deployment_chart:
              type: tosca.artifacts.HelmChart
              file: /Artifacts/Scripts/occndbtier-1.8.9.tgz
            values.yaml:
              type: tosca.artifacts.File
              file: /Artifacts/Scripts/occndbtier-1.8.9-custom-values.yaml
            occne-mysql-cluster:
              type: tosca.artifacts.nfv.SwImage
              file: /Artifacts/Images/occne-mysql-cluster-1.8.9.tar
            occne-cndbtier-mysqlndb-client:
              type: tosca.artifacts.nfv.SwImage
              file: /Artifacts/Images/occne-cndbtier-mysqlndb-client-1.8.9.tar
            occne-db-replication-svc:
              type: tosca.artifacts.nfv.SwImage
              file: /Artifacts/Images/occne-db-replication-svc-1.8.9.tar
            occne-db-monitor-svc:
              type: tosca.artifacts.nfv.SwImage
              file: /Artifacts/Images/occne-db-monitor-svc-1.8.9.tar
            occne-db-backup-manager-svc:
              type: tosca.artifacts.nfv.SwImage
              file: /Artifacts/Images/occne-db-backup-manager-svc-1.8.9.tar
            occne-db-backup-executor-svc:
              type: tosca.artifacts.nfv.SwImage
              file: /Artifacts/Images/occne-db-backup-executor-svc-1.8.9.tar
      policies: {
        }
  Definitions/etsi_nfv_sol001_vnfd_2_5_1_types.yaml:
    tosca_definitions_version: tosca_simple_yaml_1_2
    description: ETSI NFV SOL 001 vnfd types definitions version 2.5.1
    artifact_types:
      tosca.artifacts.nfv.SwImage:
        description: describes the software image which is directly loaded on the
          virtualisation container realizing of the VDU or is to be loaded on a virtual
          storage resource.
        derived_from: tosca.artifacts.Deployment.Image
      tosca.artifacts.Implementation.nfv.Mistral:
        description: artifacts for Mistral workflows
        mime_type: application/x-yaml
        file_ext:
        - yaml
        derived_from: tosca.artifacts.Implementation
    data_types:
      tosca.datatypes.nfv.L2AddressData:
        description: Describes the information on the MAC addresses to be assigned
          to a connection point.
        properties:
          mac_address_assignment:
            type: boolean
            description: Specifies if the address assignment is the responsibility
              of management and orchestration function or not. If it is set to True,
              it is the management and orchestration function responsibility
            required: true
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.L3AddressData:
        description: Provides information about Layer 3 level addressing scheme and
          parameters applicable to a CP
        properties:
          ip_address_assignment:
            type: boolean
            description: Specifies if the address assignment is the responsibility
              of management and orchestration function or not. If it is set to True,
              it is the management and orchestration function responsibility
            required: true
            status: SUPPORTED
          floating_ip_activated:
            type: boolean
            description: Specifies if the floating IP scheme is activated on the Connection
              Point or not
            required: true
            status: SUPPORTED
          ip_address_type:
            type: string
            description: Defines address type. The address type should be aligned
              with the address type supported by the layer_protocols properties of
              the parent VnfExtCp
            required: false
            status: SUPPORTED
            constraints:
            - valid_values:
              - ipv4
              - ipv6
          number_of_ip_address:
            type: integer
            description: Minimum number of IP addresses to be assigned
            required: false
            status: SUPPORTED
            constraints:
            - greater_than: 0
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.AddressData:
        description: Describes information about the addressing scheme and parameters
          applicable to a CP
        properties:
          address_type:
            type: string
            description: Describes the type of the address to be assigned to a connection
              point. The content type shall be aligned with the address type supported
              by the layerProtocol property of the connection point
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - mac_address
              - ip_address
          l2_address_data:
            type: tosca.datatypes.nfv.L2AddressData
            description: Provides the information on the MAC addresses to be assigned
              to a connection point.
            required: false
            status: SUPPORTED
          l3_address_data:
            type: tosca.datatypes.nfv.L3AddressData
            description: Provides the information on the IP addresses to be assigned
              to a connection point
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualNetworkInterfaceRequirements:
        description: Describes requirements on a virtual network interface
        properties:
          name:
            type: string
            description: Provides a human readable name for the requirement.
            required: false
            status: SUPPORTED
          description:
            type: string
            description: Provides a human readable description of the requirement.
            required: false
            status: SUPPORTED
          support_mandatory:
            type: boolean
            description: Indicates whether fulfilling the constraint is mandatory
              (TRUE) for successful operation or desirable (FALSE).
            required: true
            status: SUPPORTED
          network_interface_requirements:
            type: map
            description: The network interface requirements. A map of strings that
              contain a set of key-value pairs that describes the hardware platform
              specific  network interface deployment requirements.
            required: true
            status: SUPPORTED
            entry_schema:
              type: string
          nic_io_requirements:
            type: tosca.datatypes.nfv.LogicalNodeData
            description: references (couples) the CP with any logical node I/O requirements
              (for network devices) that may have been created. Linking these attributes
              is necessary so that so that I/O requirements that need to be articulated
              at the logical node level can be associated with the network interface
              requirements associated with the CP.
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.ConnectivityType:
        description: describes additional connectivity information of a virtualLink
        properties:
          layer_protocols:
            type: list
            description: Identifies the protocol a virtualLink gives access to (ethernet,
              mpls, odu2, ipv4, ipv6, pseudo-wire).The top layer protocol of the virtualLink
              protocol stack shall always be provided. The lower layer protocols may
              be included when there are specific requirements on these layers.
            required: true
            status: SUPPORTED
            entry_schema:
              type: string
              constraints:
              - valid_values:
                - ethernet
                - mpls
                - odu2
                - ipv4
                - ipv6
                - pseudo-wire
          flow_pattern:
            type: string
            description: Identifies the flow pattern of the connectivity
            required: false
            status: SUPPORTED
            constraints:
            - valid_values:
              - line
              - tree
              - mesh
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.RequestedAdditionalCapability:
        description: describes requested additional capability for a particular VDU
        properties:
          requested_additional_capability_name:
            type: string
            description: Identifies a requested additional capability for the VDU.
            required: true
            status: SUPPORTED
          support_mandatory:
            type: boolean
            description: Indicates whether the requested additional capability is
              mandatory for successful operation.
            required: true
            status: SUPPORTED
          min_requested_additional_capability_version:
            type: string
            description: Identifies the minimum version of the requested additional
              capability.
            required: false
            status: SUPPORTED
          preferred_requested_additional_capability_version:
            type: string
            description: Identifies the preferred version of the requested additional
              capability.
            required: false
            status: SUPPORTED
          target_performance_parameters:
            type: map
            description: Identifies specific attributes, dependent on the requested
              additional capability type.
            required: true
            status: SUPPORTED
            entry_schema:
              type: string
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualMemory:
        description: supports the specification of requirements related to virtual
          memory of a virtual compute resource
        properties:
          virtual_mem_size:
            type: scalar-unit.size
            description: Amount of virtual memory.
            required: true
            status: SUPPORTED
          virtual_mem_oversubscription_policy:
            type: string
            description: The memory core oversubscription policy in terms of virtual
              memory to physical memory on the platform.
            required: false
            status: SUPPORTED
          vdu_mem_requirements:
            type: map
            description: The hardware platform specific VDU memory requirements. A
              map of strings that contains a set of key-value pairs that describes
              hardware platform specific VDU memory requirements.
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
          numa_enabled:
            type: boolean
            description: It specifies the memory allocation to be cognisant of the
              relevant process/core allocation.
            required: false
            default: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualCpu:
        description: Supports the specification of requirements related to virtual
          CPU(s) of a virtual compute resource
        properties:
          cpu_architecture:
            type: string
            description: CPU architecture type. Examples are x86, ARM
            required: false
            status: SUPPORTED
          num_virtual_cpu:
            type: integer
            description: Number of virtual CPUs
            required: true
            status: SUPPORTED
            constraints:
            - greater_than: 0
          virtual_cpu_clock:
            type: scalar-unit.frequency
            description: Minimum virtual CPU clock rate
            required: false
            status: SUPPORTED
          virtual_cpu_oversubscription_policy:
            type: string
            description: CPU core oversubscription policy e.g. the relation of virtual
              CPU cores to physical CPU cores/threads.
            required: false
            status: SUPPORTED
          vdu_cpu_requirements:
            type: map
            description: The hardware platform specific VDU CPU requirements. A map
              of strings that contains a set of key-value pairs describing VDU CPU
              specific hardware platform requirements.
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
          virtual_cpu_pinning:
            type: tosca.datatypes.nfv.VirtualCpuPinning
            description: The virtual CPU pinning configuration for the virtualised
              compute resource.
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualCpuPinning:
        description: Supports the specification of requirements related to the virtual
          CPU pinning configuration of a virtual compute resource
        properties:
          virtual_cpu_pinning_policy:
            type: string
            description: 'Indicates the policy for CPU pinning. The policy can take
              values of "static" or "dynamic". In case of "dynamic" the allocation
              of virtual CPU cores to logical CPU cores is decided by the VIM. (e.g.:
              SMT (Simultaneous Multi-Threading) requirements). In case of "static"
              the allocation is requested to be according to the virtual_cpu_pinning_rule.'
            required: false
            status: SUPPORTED
            constraints:
            - valid_values:
              - static
              - dynamic
          virtual_cpu_pinning_rule:
            type: list
            description: Provides the list of rules for allocating virtual CPU cores
              to logical CPU cores/threads
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfcConfigurableProperties:
        description: Defines the configurable properties of a VNFC
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfcAdditionalConfigurableProperties:
        description: VnfcAdditionalConfigurableProperties type is an empty base type
          for deriving data types for describing additional configurable properties
          for a given VNFC.
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VduProfile:
        description: describes additional instantiation data for a given Vdu.Compute
          used in a specific deployment flavour.
        properties:
          min_number_of_instances:
            type: integer
            description: Minimum number of instances of the VNFC based on this Vdu.Compute
              that is permitted to exist for a particular VNF deployment flavour.
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
          max_number_of_instances:
            type: integer
            description: Maximum number of instances of the VNFC based on this Vdu.Compute
              that is permitted to exist for a particular VNF deployment flavour.
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VlProfile:
        description: Describes additional instantiation data for a given VL used in
          a specific VNF deployment flavour.
        properties:
          max_bitrate_requirements:
            type: tosca.datatypes.nfv.LinkBitrateRequirements
            description: Specifies the maximum bitrate requirements for a VL instantiated
              according to this profile.
            required: true
            status: SUPPORTED
          min_bitrate_requirements:
            type: tosca.datatypes.nfv.LinkBitrateRequirements
            description: Specifies the minimum bitrate requirements for a VL instantiated
              according to this profile.
            required: true
            status: SUPPORTED
          qos:
            type: tosca.datatypes.nfv.Qos
            description: Specifies the QoS requirements of a VL instantiated according
              to this profile.
            required: false
            status: SUPPORTED
          virtual_link_protocol_data:
            type: list
            description: Specifies the protocol data for a virtual link.
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VirtualLinkProtocolData
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualLinkProtocolData:
        description: describes one protocol layer and associated protocol data for
          a given virtual link used in a specific VNF deployment flavour
        properties:
          associated_layer_protocol:
            type: string
            description: Identifies one of the protocols a virtualLink gives access
              to (ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire) as specified by the
              connectivity_type property.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - ethernet
              - mpls
              - odu2
              - ipv4
              - ipv6
              - pseudo-wire
          l2_protocol_data:
            type: tosca.datatypes.nfv.L2ProtocolData
            description: Specifies the L2 protocol data for a virtual link. Shall
              be present when the associatedLayerProtocol attribute indicates a L2
              protocol and shall be absent otherwise.
            required: false
            status: SUPPORTED
          l3_protocol_data:
            type: tosca.datatypes.nfv.L3ProtocolData
            description: Specifies the L3 protocol data for this virtual link.  Shall
              be present when the associatedLayerProtocol attribute indicates a L3
              protocol and shall be absent otherwise.
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.L2ProtocolData:
        description: describes L2 protocol data for a given virtual link used in a
          specific VNF deployment flavour.
        properties:
          name:
            type: string
            description: Identifies the network name associated with this L2 protocol.
            required: false
            status: SUPPORTED
          network_type:
            type: string
            description: Specifies the network type for this L2 protocol.The value
              may be overridden at run-time.
            required: false
            status: SUPPORTED
            constraints:
            - valid_values:
              - flat
              - vlan
              - vxlan
              - gre
          vlan_transparent:
            type: boolean
            description: Specifies whether to support VLAN transparency for this L2
              protocol or not.
            required: false
            default: false
            status: SUPPORTED
          mtu:
            type: integer
            description: Specifies the maximum transmission unit (MTU) value for this
              L2 protocol.
            required: false
            status: SUPPORTED
            constraints:
            - greater_than: 0
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.L3ProtocolData:
        description: describes L3 protocol data for a given virtual link used in a
          specific VNF deployment flavour.
        properties:
          name:
            type: string
            description: Identifies the network name associated with this L3 protocol.
            required: false
            status: SUPPORTED
          ip_version:
            type: string
            description: Specifies IP version of this L3 protocol.The value of the
              ip_version property shall be consistent with the value of the layer_protocol
              in the connectivity_type property of the virtual link node.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - ipv4
              - ipv6
          cidr:
            type: string
            description: Specifies the CIDR (Classless Inter-Domain Routing) of this
              L3 protocol. The value may be overridden at run-time.
            required: true
            status: SUPPORTED
          ip_allocation_pools:
            type: list
            description: Specifies the allocation pools with start and end IP addresses
              for this L3 protocol. The value may be overridden at run-time.
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.IpAllocationPool
          gateway_ip:
            type: string
            description: Specifies the gateway IP address for this L3 protocol. The
              value may be overridden at run-time.
            required: false
            status: SUPPORTED
          dhcp_enabled:
            type: boolean
            description: Indicates whether DHCP (Dynamic Host Configuration Protocol)
              is enabled or disabled for this L3 protocol. The value may be overridden
              at run-time.
            required: false
            status: SUPPORTED
          ipv6_address_mode:
            type: string
            description: Specifies IPv6 address mode. May be present when the value
              of the ipVersion attribute is "ipv6" and shall be absent otherwise.
              The value may be overridden at run-time.
            required: false
            status: SUPPORTED
            constraints:
            - valid_values:
              - slaac
              - dhcpv6-stateful
              - dhcpv6-stateless
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.IpAllocationPool:
        description: Specifies a range of IP addresses
        properties:
          start_ip_address:
            type: string
            description: The IP address to be used as the first one in a pool of addresses
              derived from the cidr block full IP range
            required: true
            status: SUPPORTED
          end_ip_address:
            type: string
            description: The IP address to be used as the last one in a pool of addresses
              derived from the cidr block full IP range
            required: true
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.InstantiationLevel:
        description: Describes the scale level for each aspect that corresponds to
          a given level of resources to be instantiated within a deployment flavour
          in term of the number VNFC instances
        properties:
          description:
            type: string
            description: Human readable description of the level
            required: true
            status: SUPPORTED
          scale_info:
            type: map
            description: Represents for each aspect the scale level that corresponds
              to this instantiation level. scale_info shall be present if the VNF
              supports scaling.
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.ScaleInfo
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VduLevel:
        description: Indicates for a given Vdu.Compute in a given level the number
          of instances to deploy
        properties:
          number_of_instances:
            type: integer
            description: Number of instances of VNFC based on this VDU to deploy for
              this level.
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfLcmOperationsConfiguration:
        description: Represents information to configure lifecycle management operations
        properties:
          instantiate:
            type: tosca.datatypes.nfv.VnfInstantiateOperationConfiguration
            description: Configuration parameters for the InstantiateVnf operation
            required: false
            status: SUPPORTED
          scale:
            type: tosca.datatypes.nfv.VnfScaleOperationConfiguration
            description: Configuration parameters for the ScaleVnf operation
            required: false
            status: SUPPORTED
          scale_to_level:
            type: tosca.datatypes.nfv.VnfScaleToLevelOperationConfiguration
            description: Configuration parameters for the ScaleVnfToLevel operation
            required: false
            status: SUPPORTED
          change_flavour:
            type: tosca.datatypes.nfv.VnfChangeFlavourOperationConfiguration
            description: Configuration parameters for the changeVnfFlavourOpConfig
              operation
            required: false
            status: SUPPORTED
          heal:
            type: tosca.datatypes.nfv.VnfHealOperationConfiguration
            description: Configuration parameters for the HealVnf operation
            required: false
            status: SUPPORTED
          terminate:
            type: tosca.datatypes.nfv.VnfTerminateOperationConfiguration
            description: Configuration parameters for the TerminateVnf operation
            required: false
            status: SUPPORTED
          operate:
            type: tosca.datatypes.nfv.VnfOperateOperationConfiguration
            description: Configuration parameters for the OperateVnf operation
            required: false
            status: SUPPORTED
          change_ext_connectivity:
            type: tosca.datatypes.nfv.VnfChangeExtConnectivityOperationConfiguration
            description: Configuration parameters for the changeExtVnfConnectivityOpConfig
              operation
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfInstantiateOperationConfiguration:
        description: represents information that affect the invocation of the InstantiateVnf
          operation.
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfScaleOperationConfiguration:
        description: Represents information that affect the invocation of the ScaleVnf
          operation
        properties:
          scaling_by_more_than_one_step_supported:
            type: boolean
            description: Signals whether passing a value larger than one in the numScalingSteps
              parameter of the ScaleVnf operation is supported by this VNF.
            required: false
            default: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfScaleToLevelOperationConfiguration:
        description: represents information that affect the invocation of the ScaleVnfToLevel
          operation
        properties:
          arbitrary_target_levels_supported:
            type: boolean
            description: Signals whether scaling according to the parameter "scaleInfo"
              is supported by this VNF
            required: true
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfHealOperationConfiguration:
        description: represents information that affect the invocation of the HealVnf
          operation
        properties:
          causes:
            type: list
            description: Supported "cause" parameter values
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfTerminateOperationConfiguration:
        description: represents information that affect the invocation of the TerminateVnf
        properties:
          min_graceful_termination_timeout:
            type: scalar-unit.time
            description: Minimum timeout value for graceful termination of a VNF instance
            required: true
            status: SUPPORTED
          max_recommended_graceful_termination_timeout:
            type: scalar-unit.time
            description: Maximum recommended timeout value that can be needed to gracefully
              terminate a VNF instance of a particular type under certain conditions,
              such as maximum load condition. This is provided by VNF provider as
              information for the operator facilitating the selection of optimal timeout
              value. This value is not used as constraint
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfOperateOperationConfiguration:
        description: represents information that affect the invocation of the OperateVnf
          operation
        properties:
          min_graceful_stop_timeout:
            type: scalar-unit.time
            description: Minimum timeout value for graceful stop of a VNF instance
            required: true
            status: SUPPORTED
          max_recommended_graceful_stop_timeout:
            type: scalar-unit.time
            description: Maximum recommended timeout value that can be needed to gracefully
              stop a VNF instance of a particular type under certain conditions, such
              as maximum load condition. This is provided by VNF provider as information
              for the operator facilitating the selection of optimal timeout value.
              This value is not used as constraint
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.ScaleInfo:
        description: Indicates for a given scaleAspect the corresponding scaleLevel
        properties:
          scale_level:
            type: integer
            description: The scale level for a particular aspect
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.ScalingAspect:
        properties:
          name:
            type: string
            required: true
            status: SUPPORTED
          description:
            type: string
            required: true
            status: SUPPORTED
          max_scale_level:
            type: integer
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
          step_deltas:
            type: list
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.LinkBitrateRequirements:
        description: describes the requirements in terms of bitrate for a virtual
          link
        properties:
          root:
            type: integer
            description: Specifies the throughput requirement in bits per second of
              the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate
              capacity of E-LAN).
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
          leaf:
            type: integer
            description: Specifies the throughput requirement in bits per second of
              leaf connections to the link when applicable to the connectivity type
              (e.g. for E-Tree and E LAN branches).
            required: false
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.Qos:
        description: describes QoS data for a given VL used in a VNF deployment flavour
        properties:
          latency:
            type: scalar-unit.time
            description: Specifies the maximum latency
            required: true
            status: SUPPORTED
            constraints:
            - greater_than: 0 s
          packet_delay_variation:
            type: scalar-unit.time
            description: Specifies the maximum jitter
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0 s
          packet_loss_ratio:
            type: float
            description: Specifies the maximum packet loss ratio
            required: false
            status: SUPPORTED
            constraints:
            - in_range:
              - 0.0
              - 1.0
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfConfigurableProperties:
        description: indicates configuration properties for a given VNF (e.g. related
          to auto scaling and auto healing).
        properties:
          is_autoscale_enabled:
            type: boolean
            description: It permits to enable (TRUE)/disable (FALSE) the auto-scaling
              functionality. If the properties is not present for configuring, then
              VNF property is not supported
            required: false
            status: SUPPORTED
          is_autoheal_enabled:
            type: boolean
            description: It permits to enable (TRUE)/disable (FALSE) the auto-healing
              functionality. If the properties is not present for configuring, then
              VNF property is not supported
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfAdditionalConfigurableProperties:
        description: is an empty base type for deriving data types for describing
          additional configurable properties for a given VNF
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfInfoModifiableAttributes:
        description: Describes VNF-specific extension and metadata for a given VNF
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfInfoModifiableAttributesExtensions:
        description: is an empty base type for deriving data types for describing
          VNF-specific extension
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfInfoModifiableAttributesMetadata:
        description: is an empty base type for deriving data types for describing
          VNF-specific metadata
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.CpProtocolData:
        description: Describes and associates the protocol layer that a CP uses together
          with other protocol and connection point information
        properties:
          associated_layer_protocol:
            type: string
            description: One of the values of the property layer_protocols of the
              CP
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - ethernet
              - mpls
              - odu2
              - ipv4
              - ipv6
              - pseudo-wire
          address_data:
            type: list
            description: Provides information on the addresses to be assigned to the
              CP
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.AddressData
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.LogicalNodeData:
        description: Describes compute, memory and I/O requirements associated with
          a particular VDU.
        properties:
          logical_node_requirements:
            type: map
            description: The logical node-level compute, memory and I/O requirements.
              A map  of strings that contains a set of key-value pairs that describes
              hardware platform specific deployment requirements, including the number
              of CPU cores on this logical node, a memory configuration specific to
              a logical node  or a requirement related to the association of an I/O
              device with the logical node.
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.SwImageData:
        description: describes information  related to a software image artifact
        properties:
          name:
            type: string
            description: Name of this software image
            required: true
            status: SUPPORTED
          version:
            type: string
            description: Version of this software image
            required: true
            status: SUPPORTED
          checksum:
            type: string
            description: Checksum of the software image file
            required: true
            status: SUPPORTED
          container_format:
            type: string
            description: The container format describes the container file format
              in which software image is provided
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - aki
              - ami
              - ari
              - bare
              - docker
              - ova
              - ovf
          disk_format:
            type: string
            description: The disk format of a software image is the format of the
              underlying disk image
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - aki
              - ami
              - ari
              - iso
              - qcow2
              - raw
              - vdi
              - vhd
              - vhdx
              - vmdk
          min_disk:
            type: scalar-unit.size
            description: The minimal disk size requirement for this software image
            required: true
            status: SUPPORTED
          min_ram:
            type: scalar-unit.size
            description: The minimal RAM requirement for this software image
            required: false
            status: SUPPORTED
          size:
            type: scalar-unit.size
            description: The size of this software image
            required: true
            status: SUPPORTED
          operating_system:
            type: string
            description: Identifies the operating system used in the software image
            required: false
            status: SUPPORTED
          supported_virtualisation_environments:
            type: list
            description: Identifies the virtualisation environments (e.g. hypervisor)
              compatible with this software image
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualBlockStorageData:
        description: VirtualBlockStorageData describes block storage requirements
          associated with compute resources in a particular VDU, either as a local
          disk or as virtual attached storage
        properties:
          size_of_storage:
            type: scalar-unit.size
            description: Size of virtualised storage resource
            required: true
            status: SUPPORTED
          vdu_storage_requirements:
            type: map
            description: The hardware platform specific storage requirements. A map
              of strings that contains a set of key-value pairs that represents the
              hardware platform specific storage deployment requirements.
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
          rdma_enabled:
            type: boolean
            description: Indicates if the storage support RDMA
            required: false
            default: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualObjectStorageData:
        description: VirtualObjectStorageData describes object storage requirements
          associated with compute resources in a particular VDU
        properties:
          max_size_of_storage:
            type: scalar-unit.size
            description: Maximum size of virtualized storage resource
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualFileStorageData:
        description: VirtualFileStorageData describes file storage requirements associated
          with compute resources in a particular VDU
        properties:
          size_of_storage:
            type: scalar-unit.size
            description: Size of virtualized storage resource
            required: true
            status: SUPPORTED
          file_system_protocol:
            type: string
            description: The shared file system protocol (e.g. NFS, CIFS)
            required: true
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualLinkBitrateLevel:
        description: Describes bitrate requirements applicable to the virtual link
          instantiated from a particicular VnfVirtualLink
        properties:
          bitrate_requirements:
            type: tosca.datatypes.nfv.LinkBitrateRequirements
            description: Virtual link bitrate requirements for an instantiation level
              or bitrate delta for a scaling step
            required: true
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfOperationAdditionalParameters:
        description: Is an empty base type for deriving data type for describing VNF-specific
          parameters to be passed when invoking lifecycle management operations
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfChangeFlavourOperationConfiguration:
        description: represents information that affect the invocation of the ChangeVnfFlavour
          operation
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfChangeExtConnectivityOperationConfiguration:
        description: represents information that affect the invocation of the ChangeExtVnfConnectivity
          operation
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfMonitoringParameter:
        description: Represents information on virtualised resource related performance
          metrics applicable to the VNF.
        properties:
          name:
            type: string
            description: Human readable name of the monitoring parameter
            required: true
            status: SUPPORTED
          performance_metric:
            type: string
            description: Identifies the performance metric, according to ETSI GS NFV-IFA
              027.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - v_cpu_usage_mean_vnf
              - v_cpu_usage_peak_vnf
              - v_memory_usage_mean_vnf
              - v_memory_usage_peak_vnf
              - v_disk_usage_mean_vnf
              - v_disk_usage_peak_vnf
              - byte_incoming_vnf_ext_cp
              - byte_outgoing_vnf_ext_cp
              - packet_incoming_vnf_ext_cp
              - packet_outgoing_vnf_ext_cp
          collection_period:
            type: scalar-unit.time
            description: Describes the recommended periodicity at which to collect
              the performance information.
            required: false
            status: SUPPORTED
            constraints:
            - greater_than: 0 s
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfcMonitoringParameter:
        description: Represents information on virtualised resource related performance
          metrics applicable to the VNF.
        properties:
          name:
            type: string
            description: Human readable name of the monitoring parameter
            required: true
            status: SUPPORTED
          performance_metric:
            type: string
            description: Identifies the performance metric, according to ETSI GS NFV-IFA
              027.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - v_cpu_usage_mean_vnf
              - v_cpu_usage_peak_vnf
              - v_memory_usage_mean_vnf
              - v_memory_usage_peak_vnf
              - v_disk_usage_mean_vnf
              - v_disk_usage_peak_vnf
              - byte_incoming_vnf_int_cp
              - byte_outgoing_vnf_int_cp
              - packet_incoming_vnf_int_cp
              - packet_outgoing_vnf_int_cp
          collection_period:
            type: scalar-unit.time
            description: Describes the recommended periodicity at which to collect
              the performance information.
            required: false
            status: SUPPORTED
            constraints:
            - greater_than: 0 s
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VirtualLinkMonitoringParameter:
        description: Represents information on virtualised resource related performance
          metrics applicable to the VNF.
        properties:
          name:
            type: string
            description: Human readable name of the monitoring parameter
            required: true
            status: SUPPORTED
          performance_metric:
            type: string
            description: Identifies a performance metric derived from those defined
              in ETSI GS NFV-IFA 027.The packetOutgoingVirtualLink and packetIncomingVirtualLink
              metrics shall be obtained by aggregation the PacketOutgoing and PacketIncoming
              measurements defined in clause 7.1 of GS NFV-IFA 027 of all virtual
              link ports attached to the virtual link to which the metrics apply.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - packet_outgoing_virtual_link
              - packet_incoming_virtual_link
          collection_period:
            type: scalar-unit.time
            description: Describes the recommended periodicity at which to collect
              the performance information.
            required: false
            status: SUPPORTED
            constraints:
            - greater_than: 0 s
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.InterfaceDetails:
        description: information used to access an interface exposed by a VNF
        properties:
          uri_components:
            type: tosca.datatypes.nfv.UriComponents
            description: Provides components to build a Uniform Ressource Identifier
              (URI) where to access the interface end point.
            required: false
            status: SUPPORTED
          interface_specific_data:
            type: map
            description: Provides additional details that are specific to the type
              of interface considered.
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.UriComponents:
        description: information used to build a URI that complies with IETF RFC 3986
          [8].
        properties:
          scheme:
            type: string
            description: scheme component of a URI.
            required: true
            status: SUPPORTED
          authority:
            type: tosca.datatypes.nfv.UriAuthority
            description: Authority component of a URI
            required: false
            status: SUPPORTED
          path:
            type: string
            description: path component of a URI.
            required: false
            status: SUPPORTED
          query:
            type: string
            description: query component of a URI.
            required: false
            status: SUPPORTED
          fragment:
            type: string
            description: fragment component of a URI.
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.UriAuthority:
        description: information that corresponds to the authority component of a
          URI as specified in IETF RFC 3986 [8]
        properties:
          user_info:
            type: string
            description: user_info field of the authority component of a URI
            required: false
            status: SUPPORTED
          host:
            type: string
            description: host field of the authority component of a URI
            required: false
            status: SUPPORTED
          port:
            type: string
            description: port field of the authority component of a URI
            required: false
            status: SUPPORTED
        derived_from: tosca.datatypes.Root
      tosca.datatypes.nfv.VnfProfile:
        description: describes a profile for instantiating VNFs of a particular NS
          DF according to a specific VNFD and VNF DF.
        properties:
          instantiation_level:
            type: string
            description: Identifier of the instantiation level of the VNF DF to be
              used for instantiation. If not present, the default instantiation level
              as declared in the VNFD shall be used.
            required: false
            status: SUPPORTED
          min_number_of_instances:
            type: integer
            description: Minimum number of instances of the VNF based on this VNFD
              that is permitted to exist for this VnfProfile.
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
          max_number_of_instances:
            type: integer
            description: Maximum number of instances of the VNF based on this VNFD
              that is permitted to exist for this VnfProfile.
            required: true
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
        derived_from: tosca.datatypes.Root
    capability_types:
      tosca.capabilities.nfv.VirtualBindable:
        description: Indicates that the node that includes it can be pointed by a
          tosca.relationships.nfv.VirtualBindsTo relationship type which is used to
          model the VduHasCpd association
        derived_from: tosca.capabilities.Node
      tosca.capabilities.nfv.VirtualLinkable:
        description: A node type that includes the VirtualLinkable capability indicates
          that it can be pointed by tosca.relationships.nfv.VirtualLinksTo relationship
          type
        derived_from: tosca.capabilities.Root
      tosca.capabilities.nfv.VirtualCompute:
        description: Describes the capabilities related to virtual compute resources
        properties:
          logical_node:
            type: map
            description: Describes the Logical Node requirements
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.LogicalNodeData
          requested_additional_capabilities:
            type: map
            description: Describes additional capability for a particular VDU
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.RequestedAdditionalCapability
          compute_requirements:
            type: map
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
          virtual_memory:
            type: tosca.datatypes.nfv.VirtualMemory
            description: Describes virtual memory of the virtualized compute
            required: true
            status: SUPPORTED
          virtual_cpu:
            type: tosca.datatypes.nfv.VirtualCpu
            description: Describes virtual CPU(s) of the virtualized compute
            required: true
            status: SUPPORTED
          virtual_local_storage:
            type: list
            description: A list of virtual system disks created and destroyed as part
              of the VM lifecycle
            required: false
            status: SUPPORTED
            entry_schema:
              description: virtual system disk definition
              type: tosca.datatypes.nfv.VirtualBlockStorageData
        derived_from: tosca.capabilities.Node
      tosca.capabilities.nfv.VirtualStorage:
        description: Describes the attachment capabilities related to Vdu.Storage
        derived_from: tosca.capabilities.Root
    interface_types:
      tosca.interfaces.nfv.Vnflcm:
        derived_from: tosca.interfaces.Root
        description: This interface encompasses a set of TOSCA operations corresponding
          to the VNF LCM operations defined in ETSI GS NFV-IFA 007 as well as to preamble
          and postamble procedures to the execution of the VNF LCM operations.
        instantiate:
          description: Invoked upon receipt of an Instantiate VNF request
        instantiate_start:
          description: Invoked before instantiate
        instantiate_end:
          description: Invoked after instantiate
        terminate:
          description: Invoked upon receipt Terminate VNF request
        terminate_start:
          description: Invoked before terminate
        terminate_end:
          description: Invoked after terminate
        modify_information:
          description: Invoked upon receipt of a Modify VNF Information request
        modify_information_start:
          description: Invoked before modify_information
        modify_information_end:
          description: Invoked after modify_information
        change_flavour:
          description: Invoked upon receipt of a Change VNF Flavour request
        change_flavour_start:
          description: Invoked before change_flavour
        change_flavour_end:
          description: Invoked after change_flavour
        change_external_connectivity:
          description: Invoked upon receipt of a Change External VNF Connectivity   request
        change_external_connectivity_start:
          description: Invoked before change_external_connectivity
        change_external_connectivity_end:
          description: Invoked after change_external_connectivity
        operate:
          description: Invoked upon receipt of an Operate VNF request
        operate_start:
          description: Invoked before operate
        operate_end:
          description: Invoked after operate
        heal:
          description: Invoked upon receipt of a Heal VNF request
        heal_start:
          description: Invoked before heal
        heal_end:
          description: Invoked after heal
        scale:
          description: Invoked upon receipt of a Scale VNF request
        scale_start:
          description: Invoked before scale
        scale_end:
          description: Invoked after scale
        scale_to_level:
          description: Invoked upon receipt of a Scale VNF to Level request
        scale_to_level_start:
          description: Invoked before scale_to_level
        scale_to_level_end:
          description: Invoked after scale_to_level
    relationship_types:
      tosca.relationships.nfv.VirtualBindsTo:
        description: Represents an association relationship between Vdu.Compute and
          VduCp node types
        valid_target_types:
        - tosca.capabilities.nfv.VirtualBindable
        derived_from: tosca.relationships.DependsOn
      tosca.relationships.nfv.VirtualLinksTo:
        description: Represents an association relationship between the VduCp and
          VnfVirtualLink node types
        valid_target_types:
        - tosca.capabilities.nfv.VirtualLinkable
        derived_from: tosca.relationships.DependsOn
      tosca.relationships.nfv.AttachesTo:
        description: Represents an association relationship between the Vdu.Compute
          and one of the node types, Vdu.VirtualBlockStorage, Vdu.VirtualObjectStorage
          or Vdu.VirtualFileStorage
        valid_target_types:
        - tosca.capabilities.nfv.VirtualStorage
        derived_from: tosca.relationships.Root
    node_types:
      tosca.nodes.nfv.VNF:
        description: The generic abstract type from which all VNF specific abstract
          node types shall be derived to form, together with other node types, the
          TOSCA service template(s) representing the VNFD
        properties:
          descriptor_id:
            type: string
            description: Globally unique identifier of the VNFD
            required: true
            status: SUPPORTED
          descriptor_version:
            type: string
            description: Identifies the version of the VNFD
            required: true
            status: SUPPORTED
          provider:
            type: string
            description: Provider of the VNF and of the VNFD
            required: true
            status: SUPPORTED
          product_name:
            type: string
            description: Human readable name for the VNF Product
            required: true
            status: SUPPORTED
          software_version:
            type: string
            description: Software version of the VNF
            required: true
            status: SUPPORTED
          product_info_name:
            type: string
            description: Human readable name for the VNF Product
            required: false
            status: SUPPORTED
          product_info_description:
            type: string
            description: Human readable description of the VNF Product
            required: false
            status: SUPPORTED
          vnfm_info:
            type: list
            description: Identifies VNFM(s) compatible with the VNF
            required: true
            status: SUPPORTED
            entry_schema:
              type: string
          localization_languages:
            type: list
            description: Information about localization languages of the VNF
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
          default_localization_language:
            type: string
            description: Default localization language that is instantiated if no
              information about selected localization language is available
            required: false
            status: SUPPORTED
          lcm_operations_configuration:
            type: tosca.datatypes.nfv.VnfLcmOperationsConfiguration
            description: Describes the configuration parameters for the VNF LCM operations
            required: false
            status: SUPPORTED
          monitoring_parameters:
            type: list
            description: Describes monitoring parameters applicable to the VNF.
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VnfMonitoringParameter
          flavour_id:
            type: string
            description: Identifier of the Deployment Flavour within the VNFD
            required: true
            status: SUPPORTED
          flavour_description:
            type: string
            description: Human readable description of the DF
            required: true
            status: SUPPORTED
        requirements:
        - virtual_link:
            capability: tosca.capabilities.nfv.VirtualLinkable
            relationship: tosca.relationships.nfv.VirtualLinksTo
            occurrences:
            - 0
            - 1
        interfaces:
          Vnflcm:
            type: tosca.interfaces.nfv.Vnflcm
        derived_from: tosca.nodes.Root
      tosca.nodes.nfv.VnfExtCp:
        description: Describes a logical external connection point, exposed by the
          VNF enabling connection with an external Virtual Link
        properties:
          virtual_network_interface_requirements:
            type: list
            description: The actual virtual NIC requirements that is been assigned
              when instantiating the connection point
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VirtualNetworkInterfaceRequirements
        requirements:
        - external_virtual_link:
            capability: tosca.capabilities.nfv.VirtualLinkable
            relationship: tosca.relationships.nfv.VirtualLinksTo
            occurrences:
            - 1
            - 1
        - internal_virtual_link:
            capability: tosca.capabilities.nfv.VirtualLinkable
            relationship: tosca.relationships.nfv.VirtualLinksTo
            occurrences:
            - 1
            - 1
        derived_from: tosca.nodes.nfv.Cp
      tosca.nodes.nfv.Vdu.Compute:
        description: Describes the virtual compute part of a VDU which is a construct   supporting
          the description of the deployment and operational behavior of a VNFC
        properties:
          name:
            type: string
            description: Human readable name of the VDU
            required: true
            status: SUPPORTED
          description:
            type: string
            description: Human readable description of the VDU
            required: true
            status: SUPPORTED
          boot_order:
            type: list
            description: References a node template name from which a valid boot device
              is created
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
          nfvi_constraints:
            type: list
            description: Describes constraints on the NFVI for the VNFC instance(s)
              created from this VDU
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
          monitoring_parameters:
            type: list
            description: Describes monitoring parameters applicable to a VNFC instantiated
              from this VDU
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VnfcMonitoringParameter
          vdu_profile:
            type: tosca.datatypes.nfv.VduProfile
            description: Defines additional instantiation data for the VDU.Compute
              node
            required: true
            status: SUPPORTED
          sw_image_data:
            type: tosca.datatypes.nfv.SwImageData
            description: Defines information related to a SwImage artifact used by
              this Vdu.Compute node
            required: false
            status: SUPPORTED
          boot_data:
            type: string
            description: Contains a string or a URL to a file contained in the VNF
              package used to customize a virtualised compute resource at boot time.
              The bootData may contain variable parts that are replaced by deployment
              specific values before being sent to the VIM.
            required: false
            status: SUPPORTED
        requirements:
        - virtual_storage:
            capability: tosca.capabilities.nfv.VirtualStorage
            relationship: tosca.relationships.nfv.AttachesTo
            occurrences:
            - 0
            - UNBOUNDED
        capabilities:
          virtual_compute:
            type: tosca.capabilities.nfv.VirtualCompute
            occurrences:
            - 1
            - 1
          virtual_binding:
            type: tosca.capabilities.nfv.VirtualBindable
            occurrences:
            - 1
            - UNBOUNDED
        derived_from: tosca.nodes.Root
      tosca.nodes.nfv.Vdu.VirtualBlockStorage:
        description: This node type describes the specifications of requirements related
          to virtual block storage resources
        properties:
          virtual_block_storage_data:
            type: tosca.datatypes.nfv.VirtualBlockStorageData
            description: Describes the block storage characteristics.
            required: true
            status: SUPPORTED
          sw_image_data:
            type: tosca.datatypes.nfv.SwImageData
            description: Defines information related to a SwImage artifact used by
              this Vdu.Compute node.
            required: false
            status: SUPPORTED
        capabilities:
          virtual_storage:
            type: tosca.capabilities.nfv.VirtualStorage
            description: Defines the capabilities of virtual_storage.
            occurrences:
            - 1
            - UNBOUNDED
        derived_from: tosca.nodes.Root
      tosca.nodes.nfv.Vdu.VirtualObjectStorage:
        description: This node type describes the specifications of requirements related
          to virtual object storage resources
        properties:
          virtual_object_storage_data:
            type: tosca.datatypes.nfv.VirtualObjectStorageData
            description: Describes the object  storage characteristics.
            required: true
            status: SUPPORTED
        capabilities:
          virtual_storage:
            type: tosca.capabilities.nfv.VirtualStorage
            description: Defines the capabilities of virtual_storage.
            occurrences:
            - 1
            - UNBOUNDED
        derived_from: tosca.nodes.Root
      tosca.nodes.nfv.Vdu.VirtualFileStorage:
        description: This node type describes the specifications of requirements related
          to virtual file storage resources
        properties:
          virtual_file_storage_data:
            type: tosca.datatypes.nfv.VirtualFileStorageData
            description: Describes the file  storage characteristics.
            required: true
            status: SUPPORTED
        requirements:
        - virtual_link:
            capability: tosca.capabilities.nfv.VirtualLinkable
            relationship: tosca.relationships.nfv.VirtualLinksTo
            occurrences:
            - 1
            - 1
        capabilities:
          virtual_storage:
            type: tosca.capabilities.nfv.VirtualStorage
            description: Defines the capabilities of virtual_storage.
            occurrences:
            - 1
            - UNBOUNDED
        derived_from: tosca.nodes.Root
      tosca.nodes.nfv.Cp:
        description: Provides information regarding the purpose of the connection
          point
        properties:
          layer_protocols:
            type: list
            description: Identifies which protocol the connection point uses for connectivity
              purposes
            required: true
            status: SUPPORTED
            entry_schema:
              type: string
              constraints:
              - valid_values:
                - ethernet
                - mpls
                - odu2
                - ipv4
                - ipv6
                - pseudo-wire
          role:
            type: string
            description: Identifies the role of the port in the context of the traffic
              flow patterns in the VNF or parent NS
            required: false
            status: SUPPORTED
            constraints:
            - valid_values:
              - root
              - leaf
          description:
            type: string
            description: Provides human-readable information on the purpose of the
              connection point
            required: false
            status: SUPPORTED
          protocol:
            type: list
            description: Provides information on the addresses to be assigned to the
              connection point(s) instantiated from this Connection Point Descriptor
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.CpProtocolData
          trunk_mode:
            type: boolean
            description: Provides information about whether the CP instantiated from
              this Cp is in Trunk mode (802.1Q or other), When operating in "trunk
              mode", the Cp is capable of carrying traffic for several VLANs. Absence
              of this property implies that trunkMode is not configured for the Cp
              i.e. It is equivalent to boolean value "false".
            required: false
            status: SUPPORTED
        derived_from: tosca.nodes.Root
      tosca.nodes.nfv.VduCp:
        description: describes network connectivity between a VNFC instance based
          on this VDU and an internal VL
        properties:
          bitrate_requirement:
            type: integer
            description: Bitrate requirement in bit per second on this connection
              point
            required: false
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
          virtual_network_interface_requirements:
            type: list
            description: Specifies requirements on a virtual network interface realising
              the CPs instantiated from this CPD
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VirtualNetworkInterfaceRequirements
          order:
            type: integer
            description: The order of the NIC on the compute instance (e.g.eth2)
            required: false
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
          vnic_type:
            type: string
            description: Describes the type of the virtual network interface realizing
              the CPs instantiated from this CPD
            required: false
            status: SUPPORTED
            constraints:
            - valid_values:
              - normal
              - virtio
              - direct-physical
        requirements:
        - virtual_link:
            capability: tosca.capabilities.nfv.VirtualLinkable
            relationship: tosca.relationships.nfv.VirtualLinksTo
            occurrences:
            - 1
            - 1
        - virtual_binding:
            capability: tosca.capabilities.nfv.VirtualBindable
            node: tosca.nodes.nfv.Vdu.Compute
            relationship: tosca.relationships.nfv.VirtualBindsTo
            occurrences:
            - 1
            - 1
        derived_from: tosca.nodes.nfv.Cp
      tosca.nodes.nfv.VnfVirtualLink:
        description: Describes the information about an internal VNF VL
        properties:
          connectivity_type:
            type: tosca.datatypes.nfv.ConnectivityType
            description: Specifies the protocol exposed by the VL and the flow pattern
              supported by the VL
            required: true
            status: SUPPORTED
          description:
            type: string
            description: Provides human-readable information on the purpose of the
              VL
            required: false
            status: SUPPORTED
          test_access:
            type: list
            description: Test access facilities available on the VL
            required: false
            status: SUPPORTED
            entry_schema:
              type: string
              constraints:
              - valid_values:
                - passive_monitoring
                - active_loopback
          vl_profile:
            type: tosca.datatypes.nfv.VlProfile
            description: Defines additional data for the VL
            required: true
            status: SUPPORTED
          monitoring_parameters:
            type: list
            description: Describes monitoring parameters applicable to the VL
            required: false
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VirtualLinkMonitoringParameter
        capabilities:
          virtual_linkable:
            type: tosca.capabilities.nfv.VirtualLinkable
            occurrences:
            - 1
            - UNBOUNDED
        derived_from: tosca.nodes.Root
    group_types:
      tosca.groups.nfv.PlacementGroup:
        description: PlacementGroup is used for describing the affinity or anti-affinity
          relationship applicable between the virtualization containers to be created
          based on different VDUs, or between internal VLs to be created based on
          different VnfVirtualLinkDesc(s)
        properties:
          description:
            type: string
            description: Human readable description of the group
            required: true
            status: SUPPORTED
        members:
        - tosca.nodes.nfv.Vdu.Compute
        - tosca.nodes.nfv.VnfVirtualLink
        derived_from: tosca.groups.Root
    policy_types:
      tosca.policies.nfv.InstantiationLevels:
        description: The InstantiationLevels type is a policy type representing all
          the instantiation levels of resources to be instantiated within a deployment
          flavour and including default instantiation level in term of the number
          of VNFC instances to be created as defined in ETSI GS NFV-IFA 011 [1].
        properties:
          levels:
            type: map
            description: Describes the various levels of resources that can be used
              to instantiate the VNF using this flavour.
            required: true
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.InstantiationLevel
          default_level:
            type: string
            description: The default instantiation level for this flavour.
            required: false
            status: SUPPORTED
        derived_from: tosca.policies.Root
      tosca.policies.nfv.VduInstantiationLevels:
        description: The VduInstantiationLevels type is a policy type representing
          all the instantiation levels of resources to be instantiated within a deployment
          flavour in term of the number of VNFC instances to be created from each
          vdu.Compute. as defined in ETSI GS NFV-IFA 011 [1]
        properties:
          levels:
            type: map
            description: Describes the Vdu.Compute levels of resources that can be
              used to instantiate the VNF using this flavour
            required: true
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VduLevel
        targets:
        - tosca.nodes.nfv.Vdu.Compute
        derived_from: tosca.policies.Root
      tosca.policies.nfv.VirtualLinkInstantiationLevels:
        description: The VirtualLinkInstantiationLevels type is a policy type representing
          all the instantiation levels of virtual link resources to be instantiated
          within a deployment flavour as defined in ETSI GS NFV-IFA 011 [1].
        properties:
          levels:
            type: map
            description: Describes the virtual link levels of resources that can be
              used to instantiate the VNF using this flavour.
            required: true
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VirtualLinkBitrateLevel
        targets:
        - tosca.nodes.nfv.VnfVirtualLink
        derived_from: tosca.policies.Root
      tosca.policies.nfv.ScalingAspects:
        description: The ScalingAspects type is a policy type representing the scaling
          aspects used for horizontal scaling as defined in ETSI GS NFV-IFA 011 [1].
        properties:
          aspects:
            type: map
            description: Describe maximum scale level for total number of scaling
              steps that can be applied to a particular aspect
            required: true
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.ScalingAspect
        derived_from: tosca.policies.Root
      tosca.policies.nfv.VduScalingAspectDeltas:
        description: The VduScalingAspectDeltas type is a policy type representing
          the Vdu.Compute detail of an aspect deltas used for horizontal scaling,
          as defined in ETSI GS NFV-IFA 011 [1].
        properties:
          aspect:
            type: string
            description: Represents the scaling aspect to which this policy applies
            required: true
            status: SUPPORTED
          deltas:
            type: map
            description: Describes the Vdu.Compute scaling deltas to be applied for
              every scaling steps of a particular aspect.
            required: true
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VduLevel
        targets:
        - tosca.nodes.nfv.Vdu.Compute
        derived_from: tosca.policies.Root
      tosca.policies.nfv.VirtualLinkBitrateScalingAspectDeltas:
        description: The VirtualLinkBitrateScalingAspectDeltas type is a policy type
          representing the VnfVirtualLink detail of an aspect deltas used for horizontal
          scaling, as defined in ETSI GS NFV-IFA 011 [1].
        properties:
          aspect:
            type: string
            description: Represents the scaling aspect to which this policy applies.
            required: true
            status: SUPPORTED
          deltas:
            type: map
            description: Describes the VnfVirtualLink scaling deltas to be applied
              for every scaling steps of a particular aspect.
            required: true
            status: SUPPORTED
            entry_schema:
              type: tosca.datatypes.nfv.VirtualLinkBitrateLevel
        targets:
        - tosca.nodes.nfv.VnfVirtualLink
        derived_from: tosca.policies.Root
      tosca.policies.nfv.VduInitialDelta:
        description: The VduInitialDelta type is a policy type representing the Vdu.Compute
          detail of an initial delta used for horizontal scaling, as defined in ETSI
          GS NFV-IFA 011 [1].
        properties:
          initial_delta:
            type: tosca.datatypes.nfv.VduLevel
            description: Represents the initial minimum size of the VNF.
            required: true
            status: SUPPORTED
        targets:
        - tosca.nodes.nfv.Vdu.Compute
        derived_from: tosca.policies.Root
      tosca.policies.nfv.VirtualLinkBitrateInitialDelta:
        description: The VirtualLinkBitrateInitialDelta type is a policy type representing
          the VnfVirtualLink detail of an initial deltas used for horizontal scaling,
          as defined in ETSI GS NFV-IFA 011 [1].
        properties:
          initial_delta:
            type: tosca.datatypes.nfv.VirtualLinkBitrateLevel
            description: Represents the initial minimum size of the VNF.
            required: true
            status: SUPPORTED
        targets:
        - tosca.nodes.nfv.VnfVirtualLink
        derived_from: tosca.policies.Root
      tosca.policies.nfv.AffinityRule:
        description: The AffinityRule describes the affinity rules applicable for
          the defined targets
        properties:
          scope:
            type: string
            description: scope of the rule is an NFVI_node, an NFVI_PoP, etc.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - nfvi_node
              - zone
              - zone_group
              - nfvi_pop
        targets:
        - tosca.nodes.nfv.Vdu.Compute
        - tosca.nodes.nfv.VnfVirtualLink
        - tosca.groups.nfv.PlacementGroup
        derived_from: tosca.policies.Placement
      tosca.policies.nfv.AntiAffinityRule:
        description: The AntiAffinityRule describes the anti-affinity rules applicable
          for the defined targets
        properties:
          scope:
            type: string
            description: scope of the rule is an NFVI_node, an NFVI_PoP, etc.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - nfvi_node
              - zone
              - zone_group
              - nfvi_pop
        targets:
        - tosca.nodes.nfv.Vdu.Compute
        - tosca.nodes.nfv.VnfVirtualLink
        - tosca.groups.nfv.PlacementGroup
        derived_from: tosca.policies.Placement
      tosca.policies.nfv.SecurityGroupRule:
        description: The SecurityGroupRule type is a policy type specified the matching
          criteria for the ingress and/or egress traffic to/from visited connection
          points as defined in ETSI GS NFV-IFA 011 [1].
        properties:
          description:
            type: string
            description: Human readable description of the security group rule.
            required: false
            status: SUPPORTED
          direction:
            type: string
            description: The direction in which the security group rule is applied.
              The direction of 'ingress' or 'egress' is specified against the associated
              CP. I.e., 'ingress' means the packets entering a CP, while 'egress'
              means the packets sent out of a CP.
            required: false
            default: ingress
            status: SUPPORTED
            constraints:
            - valid_values:
              - ingress
              - egress
          ether_type:
            type: string
            description: Indicates the protocol carried over the Ethernet layer.
            required: false
            default: ipv4
            status: SUPPORTED
            constraints:
            - valid_values:
              - ipv4
              - ipv6
          protocol:
            type: string
            description: Indicates the protocol carried over the IP layer. Permitted
              values include any protocol defined in the IANA protocol registry, e.g.
              TCP, UDP, ICMP, etc.
            required: false
            default: tcp
            status: SUPPORTED
            constraints:
            - valid_values:
              - hopopt
              - icmp
              - igmp
              - ggp
              - ipv4
              - st
              - tcp
              - cbt
              - egp
              - igp
              - bbn_rcc_mon
              - nvp_ii
              - pup
              - argus
              - emcon
              - xnet
              - chaos
              - udp
              - mux
              - dcn_meas
              - hmp
              - prm
              - xns_idp
              - trunk_1
              - trunk_2
              - leaf_1
              - leaf_2
              - rdp
              - irtp
              - iso_tp4
              - netblt
              - mfe_nsp
              - merit_inp
              - dccp
              - 3pc
              - idpr
              - xtp
              - ddp
              - idpr_cmtp
              - tp++
              - il
              - ipv6
              - sdrp
              - ipv6_route
              - ipv6_frag
              - idrp
              - rsvp
              - gre
              - dsr
              - bna
              - esp
              - ah
              - i_nlsp
              - swipe
              - narp
              - mobile
              - tlsp
              - skip
              - ipv6_icmp
              - ipv6_no_nxt
              - ipv6_opts
              - cftp
              - sat_expak
              - kryptolan
              - rvd
              - ippc
              - sat_mon
              - visa
              - ipcv
              - cpnx
              - cphb
              - wsn
              - pvp
              - br_sat_mon
              - sun_nd
              - wb_mon
              - wb_expak
              - iso_ip
              - vmtp
              - secure_vmtp
              - vines
              - ttp
              - iptm
              - nsfnet_igp
              - dgp
              - tcf
              - eigrp
              - ospfigp
              - sprite_rpc
              - larp
              - mtp
              - ax.25
              - ipip
              - micp
              - scc_sp
              - etherip
              - encap
              - gmtp
              - ifmp
              - pnni
              - pim
              - aris
              - scps
              - qnx
              - a/n
              - ip_comp
              - snp
              - compaq_peer
              - ipx_in_ip
              - vrrp
              - pgm
              - l2tp
              - ddx
              - iatp
              - stp
              - srp
              - uti
              - smp
              - sm
              - ptp
              - isis
              - fire
              - crtp
              - crudp
              - sscopmce
              - iplt
              - sps
              - pipe
              - sctp
              - fc
              - rsvp_e2e_ignore
              - mobility
              - udp_lite
              - mpls_in_ip
              - manet
              - hip
              - shim6
              - wesp
              - rohc
          port_range_min:
            type: integer
            description: Indicates minimum port number in the range that is matched
              by the security group rule. If a value is provided at design-time, this
              value may be overridden at run-time based on other deployment requirements
              or constraints.
            required: false
            default: 0
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
            - less_or_equal: 65535
          port_range_max:
            type: integer
            description: Indicates maximum port number in the range that is matched
              by the security group rule. If a value is provided at design-time, this
              value may be overridden at run-time based on other deployment requirements
              or constraints.
            required: false
            default: 65535
            status: SUPPORTED
            constraints:
            - greater_or_equal: 0
            - less_or_equal: 65535
        targets:
        - tosca.nodes.nfv.VduCp
        - tosca.nodes.nfv.VnfExtCp
        derived_from: tosca.policies.Root
      tosca.policies.nfv.SupportedVnfInterface:
        description: this policy type represents interfaces produced by a VNF, the
          details to access them and the applicable connection points to use to access
          these interfaces
        properties:
          interface_name:
            type: string
            description: Identifies an interface produced by the VNF.
            required: true
            status: SUPPORTED
            constraints:
            - valid_values:
              - vnf_indicator
              - vnf_configuration
          details:
            type: tosca.datatypes.nfv.InterfaceDetails
            description: Provide additional data to access the interface endpoint
            required: false
            status: SUPPORTED
        targets:
        - tosca.nodes.nfv.VnfExtCp
        - tosca.nodes.nfv.VduCp
        derived_from: tosca.policies.Root
  Definitions/vz_helm_extensions_1_0.yaml:
    tosca_definitions_version: tosca_simple_yaml_1_2
    description: Verizon extensions for Helm Charts version 1.0
    artifact_types:
      tosca.artifacts.HelmChart:
        description: describes the helm chart which is directly loaded on the virtualisation
          container realizing of the helm
        derived_from: tosca.artifacts.File
    node_types:
      tosca.nodes.verizon.Helm:
        description: Describes a Helm Chart
        properties:
          name:
            type: string
            description: Human readable name of the Helm Chart
            required: true
            status: SUPPORTED
          description:
            type: string
            description: Human readable description of the Helm Chart
            required: true
            status: SUPPORTED
          helm_version:
            type: string
            description: Version of the Helm Chart
            required: false
            status: SUPPORTED
          cpuResourceMinRequest:
            type: float
            description: Describes minimum cpu resource requested by the vendor to
              guarantee that the helm will work correctly. Measured in vCores, can
              be fractional
            required: false
            status: SUPPORTED
          cpuResourceMaxRequest:
            type: float
            description: Describes maximum cpu resource that the helm will ever consume.
              Measured in vCores, can be fractional
            required: false
            status: SUPPORTED
          memoryResourceMinRequest:
            type: scalar-unit.size
            description: Describes minimum memory resource requested by the vendor
              to guarantee that the helm will work correctly.
            required: false
            status: SUPPORTED
          memoryResourceMaxRequest:
            type: scalar-unit.size
            description: Describes maximum memory that the helm will ever consume.
            required: false
            status: SUPPORTED
          localStorageResourceMinRequest:
            type: scalar-unit.size
            description: Describes minimum local storage resource requested by the
              vendor to guarantee that the helm will work correctly.
            required: false
            status: SUPPORTED
          localStorageResourceMaxRequest:
            type: scalar-unit.size
            description: Describes maximum local storage that the helm will ever consume.
            required: false
            status: SUPPORTED
          persistentStorageResourceMinRequest:
            type: scalar-unit.size
            description: Describes minimum persistent storage resource requested by
              the vendor to guarantee that the helm will work correctly.
            required: false
            status: SUPPORTED
          persistentStorageResourceMaxRequest:
            type: scalar-unit.size
            description: Describes maximum persistent storage that the helm will ever
              consume.
            required: false
            status: SUPPORTED
          vdu_profile:
            type: tosca.datatypes.nfv.VduProfile
            description: Defines min number of helm charts and max number of helm
              charts
            required: false
            status: SUPPORTED
        derived_from: tosca.nodes.Root
entryDefinitionServiceTemplate: Definitions/occndbtier_mysqlndb_vnfd.yml
toscaMeta:
  TOSCA-Metadata/TOSCA.meta: !!binary |-
    VE9TQ0EtTWV0YS1GaWxlLVZlcnNpb246IDEuMApDU0FSLVZlcnNpb246IDEuMQpDcmVhdGVkLUJ5OiBPcmFjbGUgQ29tbXVuaWNhdGlvbnMKRW50cnktRGVmaW5pdGlvbnM6IERlZmluaXRpb25zL29jY25kYnRpZXJfbXlzcWxuZGJfdm5mZC55bWwKRW50cnktTWFuaWZlc3Q6IG9jY25kYnRpZXJfbXlzcWxuZGJfdm5mZC5tZgpFbnRyeS1JbWFnZXM6IEFydGlmYWN0cy9JbWFnZXMKRW50cnktU2NyaXB0czogQXJ0aWZhY3RzL1NjcmlwdHMvCkVudHJ5LUNoYW5nZS1Mb2c6IEFydGlmYWN0cy9DaGFuZ2VMb2cudHh0CkVudHJ5LVRlc3RzOiBBcnRpZmFjdHMvVGVzdHM=

